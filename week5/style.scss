@import url('https://fonts.googleapis.com/css?family=Roboto:400,500,500i,700,700i,900,900i');

$bg-color: #000000;
$green-color: #50ff44;

body {
  margin: 0px;
  font-family: Roboto, '微軟正黑體';
  font-size: 16px;
  color: $bg-color;
  line-height: 24px;
}

.header {
  background: $bg-color;
  color: $green-color;
  font-style: italic;
  // height: 74px;
  font-size: 36px;
  padding: 16px 8px;
  text-align: center;
}

.container {
  width: 610px;
  margin: 28px auto;
}

.detail {
  .name {
    font-size: 36px;
    color: #ffffff;
    line-height: 36px;
    font-weight: bold;
    background: $bg-color;
    padding: 8px 0px;
    text-align: center;
  }
  img {
    margin-top: -8px;
    float: left;
    width: 292px;
    border: 5px solid $bg-color;
  }
  &::after {
    content: '';
    clear: both;
    display: block;
  }
  .line {
    .attr {
      font-weight: bold;
      padding-left: 24px;
      padding-right: 24px;
      float: left;
      width: 50px;
    }
    padding-top: 16px;
    ::after {
      clear: both;
    }
  }
  .line ~ .line {
    padding-top: 8px;
  }
  .summary {
    .attr {
      font-weight: bold;
      padding-left: 24px;
      padding-right: 24px;
      padding-top: 16px; //display:inline 沒有padding-top
      display: inline-block;
    }
    .summary-text {
      padding-left: 24px;
      padding-right: 24px;
      display: flex;
      flex-direction: column;
    }
  }
}

.chapters {
  font-weight: bold;
  &::before {
    border: 4px solid $bg-color;
    content: 'All Chapters';
    display: block;
    padding: 15px 24px;
    background: $bg-color;
    color: #ffffff;
    width: 181px;
    font-size: 28px;
    text-align: center;
  }
  .chapter {
    line-height: 24px;
    color: $bg-color;
    padding: 15px 24px;
    border: 4px solid $bg-color;
    &:hover {
      background: $bg-color;
      color: #ffffff;
      &.new::after {
        color: black;
      }
    }
    & ~ .chapter {
      border-top: none;
      border-bottom: none;
    }
    &.new::after {
      content: 'NEW';
      display: inline-block;
      padding: 0px 12px;
      background: $green-color;
    }
  }
  div:first-child {
    border-bottom: none;
  }
  div:last-child:last-child {
    border-bottom: 4px solid $bg-color;
  }
}

.control {
  display: flex;
  .title {
    font-weight: bold;
    font-size: 20px;
  }
  .light-switch {
    width: 100px;
    margin-left: auto;
    display: flex;
    .control-button {
      flex: 1;
      position: relative;
      border: 2px solid $bg-color;
      margin: 0px 10px;
      &::before {
        box-sizing: border-box;
        content: '';
        border: 1px solid $bg-color;
        background: $bg-color;
        position: absolute;
        width: 50%;
        height: 80%;
        top: 10%;
        left: 0px;
      }
    }
  }
  .fa-angle-right {
    padding: 0px 20px;
    line-height: inherit;
  }
  .fas {
    line-height: inherit;
  }
}

.dark {
  background: $bg-color;
  color: #ffffff !important;
  div ~ {
    color: #ffffff;
  }
  .header {
    background: $green-color;
    color: $bg-color;
  }
  .light-switch .control-button {
    &::before {
      left: 50%;
    }
  }
  .control-button {
    border-color: #ffffff !important;
    background: #ffffff;
  }
}

.page {
  padding-top: 20px;
  position: relative;
  align-items: center;
  .left {
    position: absolute;
    width: 60%;
    left: calc(
      -610px * 60 / 100 * 10 / 100
    ); //踩雷注意!!!! left 跟right 百分比是對應 containing block
    height: auto;
    top: 20px;
    bottom: 0px;
    //為什麼要-20px，為什麼不是抓containing block的content-box的高度呢
    //由於position:absolute算法高度就會不太一樣...
    //可能還會關係影響到left,right,top,bottom
    //left + margin-left + border-left-width + padding-left + width + padding-right + border-right-width + margin-right + right = 包含块宽度
    //所以padding跟margin也會算進去
    //終於知道為什麼
    //除了calc(100% - 20px);
    //也可以用height:auto;top:20;bottom:0px;
    //[CSS规范 > 10 视觉格式化模型详述 Visual Formatting Model Details - HaoyCn's Blog - SegmentFault 思否](https://segmentfault.com/a/1190000003820437#articleHeader9)
    font-size: 60px;
    display: flex;
    align-items: center;
    &:hover::before {
      content: '<';
      display: flex;
      align-items: center;
      color: $bg-color;
      width: 10%;
      height: 100%;
      background: $green-color;
      position: absolute;
    }
  }
  .right {
    &::before {
      content: '';
      display: block;
      margin-right: auto;
    }
    &:hover::after {
      content: '>';
      display: flex;
      align-items: center;
      color: $bg-color;
      width: 10%;
      height: 100%;
      background: $green-color;
      position: absolute;
      top: 0px;
      right: 0px;
    }
    position: absolute;
    width: 60%;
    right: calc(-610px * 60 / 100 * 10 / 100);
    font-size: 60px;
    height: calc(100% - 20px);
    display: flex;
    align-items: center;
  }
  img {
    width: 100%;
    display: block;
    //大雷，竟然height會不一置(感覺div下面有padding-bottom)
    //其實是img是inline的關係
    //也可以用position:absolute;left:0px;right:0px;top:0px;bottom:0px;
    //[div或img图片高度随宽度自适应 - CSDN博客](https://blog.csdn.net/zh_rey/article/details/69666232)
    //最後有找到[<img> 外层 div 高度大于 <img> 的原因 - 简书](https://www.jianshu.com/p/0d402f13b1d1)
    //引用裡面的文章
    //     尝试了各种解决的办法，一一说下：

    //     去掉 DOCTYPE 声明，这倒是好了，可这是 HTML5 的标准声明，这肯定不是正解。
    //     给 img 设置 display:block; 样式
    //     给 img 设置 vertical-align:bottom; 样式
    //     给 img 设置 float:left; 样式
    //     给 div 设置 line-height:0; 样式。因为 line-height 属性继承自其父元素，所以要在其父元素上设置这个值就可以了
    //     给 div 设置 font-size:0; 样式
    //     给 div 设置 height，值等同于图片，不过如果图片的高度不是固定的，就不太合适了

    // 作者：Bencalie
    // 链接：https://www.jianshu.com/p/0d402f13b1d1
    // 來源：简书
    // 简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。
  }
}

.page-switch {
  display: flex;
  overflow-y: auto;
  counter-reset: page;
  padding-top: 20px;
  .img {
    padding: 10px;
    width: 80px;
    height: 120px;
    flex-shrink: 0;
    position: relative;
    &::before {
      content: '';
      display: block;
      position: absolute;
      width: 100%;
      height: 100%;
      left: 0px;
      top: 0px;
      background: rgba(0, 0, 0, 0.1);
    }

    &::after {
      position: absolute;
      top: -10px;
      left: 0px;
      display: block;
      width: 100%;
      text-align: center;
      counter-increment: page;
      content: counter(page);
    }

    &:hover {
      &::before {
        content: '';
        display: block;
        background: none;
      }
      background: black;
    }
    &:target {
      &::before {
        background: none;
      }
    }
    img {
      width: 100%;
    }
  }
}

* {
  // border: 1px solid black;
  transition: all 0.3s;
}
